<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Thunisoft.Framework.UI.Controls"
                    xmlns:converter="clr-namespace:Thunisoft.Framework.UI.Converters"
                    xmlns:ap="clr-namespace:Thunisoft.Framework.UI.AttachProperties">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
                    Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/CommonStyleDictionary.xaml" />
        <ResourceDictionary
                    Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/FontAndColorDictionary.xaml" />
        <ResourceDictionary
                    Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/SvgDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--FButton模板-->
    <ControlTemplate x:Key="FButton_Template" TargetType="{x:Type local:TFButton}">
        <Border x:Name="border" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                                    Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
            <!--Icon/Text-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <TextBlock x:Name="icon"  Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FIconMargin}" 
                           RenderTransformOrigin="0.5,0.5" Style="{StaticResource FIcon}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIcon}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIconSize}" 
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="transIcon" Angle="0"/>
                    </TextBlock.RenderTransform>
                </TextBlock>

                <TextBlock VerticalAlignment="Center"  x:Name="txt" 
                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentDecorations}" 
                                               Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                                               FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                                               Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
            </StackPanel>
        </Border>
        <!--触发器-->
        <ControlTemplate.Triggers>
            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="txt"/>
            </Trigger>
            <!--Ficon的动画触发器-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"></Condition>
                    <Condition Property="AllowsAnimation" Value="true"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <!--鼠标按下时的前景、背景样式-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedForeground}" TargetName="txt"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" TargetName="border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="FButton_Transparency" TargetType="{x:Type local:TFButton}">
        <Setter Property="Background" Value="{StaticResource SAGrayTextForeground}" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextButttonForeground}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource MouseOverForeground}" />
        <Setter Property="PressedForeground" Value="{StaticResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="Template" Value="{StaticResource TFButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="FIconMargin" Value="0,0,2,0" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    <Style x:Key="FButton_LinkButton" TargetType="{x:Type local:TFButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource LinkForeground}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource MouseOverForeground}" />
        <Setter Property="PressedForeground" Value="{StaticResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="Template" Value="{StaticResource FButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="FIconMargin" Value="0" />
        <Setter Property="FIcon" Value="" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="ContentDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="TFButton_Base" TargetType="{x:Type local:TFButton}">
        <Setter Property="Background" Value="{StaticResource SAGrayTextForeground}" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextButttonForeground}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource SABorderBrushground}" />
        <Setter Property="PressedForeground" Value="{StaticResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="FIconMargin" Value="0,0,0,0" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="TFButton_CornerCross" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent">
                        <Viewbox x:Name="icon"  
                           Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FIconMargin}" 
                           Child="{StaticResource CornerCross}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource SABorderBrushground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SABorderBrushground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TFButton_PersonInfo" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent" x:Name="Bg" Width="35" Height="35" CornerRadius="20">
                        <Viewbox x:Name="icon"  Margin="5"
                           Child="{StaticResource PersonInfo}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bg" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TFButton_AudioControl" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent" x:Name="Bg" Width="35" Height="35" CornerRadius="20">
                        <Viewbox x:Name="icon"  Margin="5"
                           Child="{StaticResource AudioControl}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bg" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TFButton_VideoControl" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent" x:Name="Bg" Width="35" Height="35" CornerRadius="20">
                        <Viewbox x:Name="icon"  Margin="5"
                           Child="{StaticResource VideoControl}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bg" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TFButton_Search" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent" x:Name="Bg" Width="35" Height="35" CornerRadius="20">
                        <Viewbox x:Name="icon"  Margin="5"
                           Child="{StaticResource Search}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" TargetName="Bg" Value="Black" />-->
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SAFloatBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TFButton_SectorCross" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Background" Value="{StaticResource SABorderBrushground}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent" x:Name="Bg" Width="30" Height="30" CornerRadius="20">
                        <Viewbox x:Name="icon"  Margin="5"
                           Child="{StaticResource SectorCross}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" TargetName="Bg" Value="Black" />-->
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TFButton_BlockChain" TargetType="{x:Type local:TFButton}" BasedOn="{StaticResource TFButton_Base}">
        <Setter Property="Background" Value="#FFF7B500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TFButton}">
                    <Border Background="Transparent" x:Name="Bg" Width="35" Height="35" CornerRadius="20">
                        <Viewbox x:Name="icon"  Margin="5"
                           Child="{StaticResource BlockChain}">
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" TargetName="Bg" Value="Black" />-->
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SALightGrayTextForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
