<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dp="clr-namespace:Thunisoft.Framework.UI.DependencyProperties"
                    xmlns:ap="clr-namespace:Thunisoft.Framework.UI.AttachProperties" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
                    Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/FontAndColorDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template" Value="{x:Null}">
        </Setter>
    </Style>

    <Style x:Key="DarkToolTipStyle" TargetType="{x:Type ToolTip}">
        <Setter Property="Foreground" Value="{StaticResource SAGrayTextForeground}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Placement" Value="Mouse"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="#000000" Opacity="0.75" CornerRadius="5" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <!--<Border.Effect>
                            <DropShadowEffect Color="#FFA4A1A1" ShadowDepth="0" BlurRadius="10"/>
                        </Border.Effect>-->
                        <TextBlock Text="{TemplateBinding Content}" Margin="10" Foreground="#FFFFFF"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   TextWrapping="Wrap"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Content}" Value="">
                            <Setter Property="Control.Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=Content}" Value="{x:Null}">
                            <Setter Property="Control.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThunisoftScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="False" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            Width="5"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Orientation="Vertical"
                            Style="{DynamicResource ResourceKey=ScrollBarStyleCommon}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Visible">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InnerThunisoftScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Margin="0,0,10,0"
                            CanContentScroll="False" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            Width="5"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Orientation="Vertical"
                            Style="{DynamicResource ResourceKey=ScrollBarStyleCommon}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Visible">
                            <Setter Property="IsHitTestVisible" TargetName="PART_VerticalScrollBar" Value="True"/>
                        </Trigger>
                        <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Hidden">
                            <Setter Property="IsHitTestVisible" TargetName="PART_VerticalScrollBar" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Collapsed">
                            <Setter Property="IsHitTestVisible" TargetName="PART_VerticalScrollBar" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyleCommon" TargetType="{x:Type ScrollBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="8">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="0"
                            Grid.RowSpan="3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" 
                            CornerRadius="3"/>
                        <Border
                            Grid.Row="1"
                            Width="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="2" />
                        <RepeatButton
                            x:Name="PART_LineUpButton"
                            Background="Transparent"
                            Visibility="Collapsed"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{DynamicResource ScrollBarButton}">
                            <Path
                                x:Name="ArrowTop"
                                Margin="1,0,1,0"
                                Data="M185,24 L181.125,27.875 188.75,27.875 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0" Opacity="0"
                            Grid.RowSpan="3" 
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsEnabled}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{DynamicResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{DynamicResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="ThumbVertical"  Style="{DynamicResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            x:Name="PART_LineDownButton"
                            Grid.Row="2"
                            Visibility="Collapsed"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{DynamicResource ScrollBarButton}">
                            <Path
                                x:Name="ArrowBottom"
                                Margin="1,0,1,0"
                                Data="M185,24 L181.125,27.875 188.75,27.875 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                RenderTransformOrigin="0.5,0.5"
                                Stretch="Uniform">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </Path.RenderTransform>
                            </Path>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="false" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation Duration="0:0:0.2" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="PART_LineUpButton" Property="IsEnabled" Value="true">
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Abled.Glyph}" />
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Abled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        x:Name="border"
                        Width="8"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="3"
                        IsEnabled="{TemplateBinding IsMouseOver}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#55586b" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="border" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="border"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Pressed.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThunisoftScrollViewer}">
    </Style>-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="5"
                        SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush x:Name="BackgroundColor" Color="Transparent" />
                        </Border.Background>
                        <Path
                            x:Name="arrow"
                            Margin="5"
                            Stretch="UniformToFill"
                            StrokeThickness="1.5">
                            <Path.Stroke>
                                <SolidColorBrush x:Name="color" Color="White" />
                            </Path.Stroke>
                            <Path.Data>
                                <PathGeometry Figures="M 3,3 L 6,6 M 3,6 L 6,3" />
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color">
                                        <ColorAnimation
                                            From="Transparent"
                                            To="#40E0D0"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color">
                                        <ColorAnimation
                                            From="#40E0D0"
                                            To="Transparent"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="Foreground" Value="{StaticResource ListBox.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ScrollViewer
                            x:Name="ScrollViewer"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Style="{StaticResource ThunisoftScrollViewer}" VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="0" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border
                                    x:Name="bg"
                                    Margin="0"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    CornerRadius="5">
                                    <ContentPresenter Margin="0,10,0,-2" TextBlock.Foreground="{TemplateBinding Foreground}" IsEnabled="{TemplateBinding IsEnabled}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="bg" Property="Background" Value="{StaticResource  SAFloatBackground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#1682FF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            CornerRadius="{TemplateBinding ap:ControlAttachProperty.BorderCornerRadius}">
                        <!--按钮文字内容-->
                        <ContentPresenter  x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="TextButtonContent" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Text="{TemplateBinding Content}" FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                    <!--触发对象是文字 还是按钮-->
                                    <!--<DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard Storyboard.TargetName="TextButtonContent" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <ColorAnimation Duration="0:0:0.3" AutoReverse="False" To="#6FB2FF"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard Storyboard.TargetName="TextButtonContent" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <ColorAnimation Duration="0:0:0.3"  AutoReverse="False"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                                -->
                                    <!--<Setter Property="Foreground" TargetName="TextButtonContent" Value="{StaticResource SABlueTextForegroundMouseOver}"/>-->
                                    <!--
                                            </Trigger>
                                        </DataTemplate.Triggers>-->
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)">
                                        <ColorAnimation Duration="0:0:0.3" AutoReverse="False" To="#6FB2FF"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard  Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)">
                                        <ColorAnimation Duration="0:0:0.3"  AutoReverse="False"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SABlueTextForegroundPress}"/>
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Press.BroderBackground}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Canvas x:Key="VectorGraph_Uploading"  Width="32" Height="32" x:Shared ="False">
        <Canvas.RenderTransform>
            <TranslateTransform X="0" Y="0"/>
        </Canvas.RenderTransform>
        <Canvas.Resources/>
        <Canvas >
            <Canvas >
                <Canvas.RenderTransform>
                    <TranslateTransform X="-839.000000" Y="-421.000000"/>
                </Canvas.RenderTransform>
                <Canvas>
                    <Canvas.RenderTransform>
                        <TranslateTransform X="520.000000" Y="217.000000"/>
                    </Canvas.RenderTransform>
                    <Canvas>
                        <Canvas.RenderTransform>
                            <TranslateTransform X="57.000000" Y="201.000000"/>
                        </Canvas.RenderTransform>
                        <Canvas>
                            <Canvas.RenderTransform>
                                <TranslateTransform X="262.000000" Y="3.000000"/>
                            </Canvas.RenderTransform>
                            <Canvas>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="{StaticResource SAGreenBackground}" StrokeThickness="1">
                                    <Path.Data>
                                        <PathGeometry Figures="M16 32 C24.836556 32 32 24.836556 32 16 C32 7.163444 24.836556 0 16 0 C7.163444 0 0 7.163444 0 16 C0 24.836556 7.163444 32 16 32 Z" FillRule="EvenOdd"/>
                                    </Path.Data>
                                </Path>
                                <Rectangle xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Left="8" Canvas.Top="8" Width="16" Height="16" Name="Rectangle" StrokeThickness="1"/>
                            </Canvas>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="8.000000" Y="7.000000"/>
                                </Canvas.RenderTransform>
                                <Rectangle xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16" Fill="#FF000000" StrokeThickness="1" Opacity="0"/>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="#FFFFFFFF" StrokeThickness="1">
                                    <Path.Data>
                                        <PathGeometry Figures="M2.4 14.104 C2.14816535 14.0720815 1.95937192 13.8578493 1.95937192 13.604 C1.95937192 13.3501507 2.14816535 13.1359185 2.4 13.104 L13.6 13.104 C13.8518346 13.1359185 14.0406281 13.3501507 14.0406281 13.604 C14.0406281 13.8578493 13.8518346 14.0720815 13.6 14.104 L2.4 14.104 Z M8.504 3.704 L8.504 11.432 C8.47208151 11.6838346 8.25784933 11.8726281 8.004 11.8726281 C7.75015067 11.8726281 7.53591849 11.6838346 7.504 11.432 L7.504 3.704 L3.688 7.52 C3.56224251 7.64575749 3.37894698 7.69487139 3.20715905 7.64884095 C3.03537113 7.60281052 2.90118948 7.46862887 2.85515905 7.29684095 C2.80912861 7.12505302 2.85824251 6.94175749 2.984 6.816 L7.592 2.2 C7.815174 1.98461158 8.168826 1.98461158 8.392 2.2 L13 6.808 C13.1944042 7.00240423 13.1944042 7.31759576 13 7.51199999 C12.8055958 7.70640422 12.4904042 7.70640423 12.296 7.512 L8.504 3.704 Z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Canvas>
                </Canvas>
            </Canvas>
        </Canvas>
    </Canvas>
    <Canvas
        x:Key="VectorGraph_UploadingSpare"
        Width="1024"
        Height="1024"
        x:Shared="False">
        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="{StaticResource SAGreenBackground}">
            <Path.Data>
                <PathGeometry Figures="M511.957333 0c282.752 0 512 229.248 512 512s-229.248 512-512 512-512-229.248-512-512 229.248-512 512-512z m26.282667 275.797333a42.666667 42.666667 0 0 0-52.565333 0l-213.333334 166.741334-4.010666 3.541333a42.666667 42.666667 0 0 0-3.328 56.32l3.541333 4.053333a42.666667 42.666667 0 0 0 56.32 3.328L469.333333 396.885333V725.333333a42.666667 42.666667 0 1 0 85.333334 0V396.885333l144.384 112.896 4.437333 3.029334a42.666667 42.666667 0 0 0 48.128-70.272z" FillRule="NonZero" />
            </Path.Data>
        </Path>
    </Canvas>
    <Canvas
        x:Key="VectorGraph_ErrorCanRetry"
        Width="1024"
        Height="1024"
        x:Shared="False">
        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Panel.ZIndex="2" Fill="{StaticResource SARedBackground}">
            <Path.Data>
                <PathGeometry Figures="M941.8 729L590.4 119.7c-14.8-43.2-61.7-66.2-104.9-51.4-24.2 8.3-43.1 27.2-51.4 51.4L82.8 729c-43.2 74.3-8.3 134.7 78.1 134.7h702.7c86.4 0 121.4-60.3 78.2-134.7zM464 292.6c25.9-26.7 68.6-27.3 95.2-1.3 0.5 0.4 0.9 0.9 1.3 1.3 12.8 13.8 19.7 32 19.1 50.8 0 17.2-26.7 145.5-34.9 238.9h-63.5c-7.6-93.4-36.2-221.7-36.2-238.9-0.5-18.8 6.3-37 19-50.8z m95.9 444.7c-26.7 25.3-68.6 25.3-95.3 0-26.3-26.3-26.3-69 0.1-95.2 26.3-26.3 69-26.3 95.2 0.1 26.3 26.2 26.3 68.8 0 95.1z" FillRule="NonZero" />
            </Path.Data>
        </Path>
    </Canvas>
    <Canvas
        x:Key="VectorGraph_Ready"
        Width="1024"
        Height="1024"
        x:Shared="False">
        <Ellipse Width="1024" Height="1024" Fill="{StaticResource SAOrangeBackground}"/>
        <StackPanel Orientation="Horizontal" Canvas.Left="150" Canvas.Top="440">
            <Ellipse Width="100" Height="100" Fill="{StaticResource SAWhiteTextForeground}" Panel.ZIndex="2" Margin="100,0,0,0"/>
            <Ellipse Width="100" Height="100" Fill="{StaticResource SAWhiteTextForeground}" Panel.ZIndex="2" Margin="100,0,0,0"/>
            <Ellipse Width="100" Height="100" Fill="{StaticResource SAWhiteTextForeground}" Panel.ZIndex="2" Margin="100,0,0,0"/>
        </StackPanel>
    </Canvas>
    <Canvas
        x:Key="VectorGraph_Complete"
        Width="1024"
        Height="1024"
        x:Shared="False">
        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Panel.ZIndex="2" Fill="{StaticResource SAGreenBackground}">
            <Path.Data>
                <PathGeometry Figures="M511.082 36.049c-263.069 0-476.33 212.903-476.33 475.534s213.261 475.534 476.33 475.534c263.073 0 476.33-212.903 476.33-475.534 0-262.63-213.255-475.534-476.33-475.534zM772.988 397.6l-306.63 313.276c-14.106 14.413-36.99 14.413-51.094 0l-166.087-169.696c-14.115-14.414-14.115-37.788 0-52.206 14.105-14.419 36.99-14.419 51.094 0l140.541 143.585 281.072-287.169c14.115-14.418 37.001-14.418 51.105 0 14.115 14.417 14.115 37.792 0 52.21z" FillRule="NonZero" />
            </Path.Data>
        </Path>
    </Canvas>
    <Canvas
        x:Key="VectorGraph_Error"
        Width="1024"
        Height="1024"
        x:Shared="False">
        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Panel.ZIndex="2" Fill="{StaticResource SARedBackground}">
            <Path.Data>
                <PathGeometry Figures="M512 65C265.13 65 65 265.13 65 512s200.13 447 447 447 447-200.12 447-447S758.88 65 512 65z m72.46 485.58l82.29 82.29L701 667.14c9.47 9.47 8.78 24.32 0 33.88s-25 8.88-33.88 0c-0.19-0.19-0.38-0.39-0.58-0.58-14.23-13.61-27.88-27.88-41.8-41.8l-85.71-85.71-27-27-38.58 38.58-82.29 82.29-34.3 34.2c-9.47 9.47-24.32 8.78-33.88 0s-8.88-25 0-33.88l0.58-0.58c13.61-14.23 27.88-27.88 41.8-41.8l85.71-85.71 27.05-27-38.58-38.58-82.29-82.29-34.25-34.3c-9.47-9.47-8.78-24.32 0-33.88s25-8.88 33.88 0l0.58 0.58c14.23 13.61 27.88 27.88 41.8 41.8L485 451.07l27 27.05 38.58-38.58 82.29-82.29Q650 340.11 667.14 323c9.47-9.47 24.32-8.78 33.88 0s8.88 25 0 33.88c-0.19 0.19-0.39 0.38-0.58 0.58-13.61 14.23-27.88 27.88-41.8 41.8L572.93 485l-27 27.05z" FillRule="NonZero" />
            </Path.Data>
        </Path>
    </Canvas>
    <Canvas
        x:Key="VectorGraph_Cancel"
        Width="1024"
        Height="1024"
        x:Shared="False">
        <Ellipse Width="1024" Height="1024" Fill="{StaticResource SARedBackground}"/>
        <Line X1="0" Y1 ="0" X2="700" Y2="0" Stroke="{StaticResource SAWhiteTextForeground}" StrokeThickness="70" Panel.ZIndex="2" Canvas.Left="145" Canvas.Top="500"/>
    </Canvas>
    <Canvas x:Key="Search" Width="1024" Height="1024" x:Shared ="False">
        <Canvas.RenderTransform>
            <TranslateTransform X="0" Y="0"/>
        </Canvas.RenderTransform>
        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="pathSearch" Fill="Gray">
            <Path.Data>
                <PathGeometry Figures="M888.6 851.9L669.1 632.5c44.9-53.3 72-122.1 72-197 0-169-137.5-306.6-306.5-306.6S128 266.4 128 435.4 265.5 742 434.5 742c75.9 0 145.3-27.8 198.9-73.6l219.3 219.3c4.9 4.9 11.4 7.4 17.9 7.4 6.5 0 13-2.5 17.9-7.4 10-9.9 10-25.9 0.1-35.8z m-710-416.5c0-141.1 114.8-255.9 255.9-255.9s255.9 114.8 255.9 255.9c0 141.1-114.8 255.9-255.9 255.9S178.6 576.6 178.6 435.4z" FillRule="NonZero"/>
            </Path.Data>
        </Path>
    </Canvas>
    <Style x:Key="Uploading" TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Viewbox Child="{StaticResource VectorGraph_Uploading}" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Error" TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Viewbox Child="{StaticResource VectorGraph_Error}" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ErrorCanRetry" TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Viewbox Child="{StaticResource VectorGraph_ErrorCanRetry}" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Ready" TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Viewbox Child="{StaticResource VectorGraph_Ready}" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Cancel" TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Viewbox Child="{StaticResource VectorGraph_Cancel}" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Complete" TargetType="{x:Type Control}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Viewbox Child="{StaticResource VectorGraph_Complete}" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskControlButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="ButtonBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{StaticResource Button.Static}"
                        BorderBrush="{StaticResource Button.Static}"
                        BorderThickness="1"
                        CornerRadius="5">
                        <Label
                            x:Name="lbStr"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontFamily="微软雅黑"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="#FFFFFFFF" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource Button.IsMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource Button.IsMouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="FIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/Fonts/#SF2015"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <Style TargetType="{x:Type TextBox}" x:Key="EditableTextBoxStyle">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MaxLength" Value="2048"/>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextSelectionBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="root">
                        <Border x:Name="BorderVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <Border x:Name="ReadOnlyVisual" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      BorderBrush="Transparent" BorderThickness="0" 
                                      Background="Transparent" Foreground="{TemplateBinding Foreground}" 
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" 
                                      Style="{StaticResource ThunisoftScrollViewer}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="ReadOnlyVisual" Value="1"/>
                           
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                         
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" Value="{StaticResource ReadonlyOpacity}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisableOpacity}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ToggleButton}" x:Key="ComboToggleButton">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}" />
        <Setter Property="ap:ControlAttachProperty.FIconSize" Value="16"/>
        <Setter Property="ap:ControlAttachProperty.FIconMargin" Value="0,1,3,1"/>
        <Setter Property="ap:ControlAttachProperty.FIcon" Value="&#xe665;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}" x:Name="Bg" Grid.ColumnSpan="2" Margin="0,1,1,1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Opacity="0.3"/>
                        <TextBlock Grid.Column="1" x:Name="FIcon" FontSize="{Binding Path=(ap:ControlAttachProperty.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding ap:ControlAttachProperty.FIcon}" 
                                   ap:ControlAttachProperty.AllowsAnimation="{TemplateBinding IsChecked}"
                                   Foreground="{TemplateBinding Foreground}" Style="{StaticResource FIcon}"
                                   Margin="{TemplateBinding ap:ControlAttachProperty.FIconMargin}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MouseOverForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.55" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PressedForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PressedForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RightAnimationControl" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border Height="250" Width="250" CornerRadius="125" Background="Green">
                            <Canvas x:Name="pointAnimation" Height="250" Width="250">
                                <Path
                  StrokeStartLineCap="Round" 
                  StrokeEndLineCap="Round" 
                  Stroke="White" 
                  StrokeThickness="25">
                                    <Path.Data>
                                        <LineGeometry x:Name="part1" StartPoint="50,130" EndPoint="50,130"/>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="path2"
                  StrokeStartLineCap="Round" 
                  StrokeEndLineCap="Round" 
                  Stroke="White" 
                  StrokeThickness="0">
                                    <Path.Data>
                                        <LineGeometry x:Name="part2" StartPoint="100,180" EndPoint="100,180"/>
                                    </Path.Data>
                                </Path>
                                <Canvas.Triggers>
                                    <EventTrigger RoutedEvent="ContentControl.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="part1" Storyboard.TargetProperty="EndPoint">
                                                <PointAnimation To="100,180" Duration="0:0:0.8">
                                                </PointAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="part2" Storyboard.TargetProperty="EndPoint">
                                                <PointAnimation To="200,80" Duration="0:0:1" BeginTime="0:0:0.8">
                                                </PointAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="path2" Storyboard.TargetProperty="StrokeThickness">
                                                <DoubleAnimation To="25" Duration="0:0:0.1" BeginTime="0:0:0.8">
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Canvas.Triggers>
                            </Canvas>
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>