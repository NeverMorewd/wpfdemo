<Window x:Class="WpfAppTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfAppTest"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Color x:Key="Mian.Background.Color">#FF8910</Color>
        <Color x:Key="Mian.OptionMark.Color">#FFFFFF</Color>
        <SolidColorBrush x:Key="Mian.Background" Color="{DynamicResource Mian.Background.Color}"></SolidColorBrush>
        <SolidColorBrush x:Key="Mian.OptionMark" Color="{DynamicResource Mian.OptionMark.Color}"></SolidColorBrush>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FF8910"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#DDDDDD"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="{StaticResource Mian.Background.Color}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{StaticResource Mian.Background.Color}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="{StaticResource Mian.OptionMark.Color}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="{StaticResource Mian.Background.Color}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{StaticResource Mian.Background.Color}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{StaticResource Mian.Background.Color}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{StaticResource Mian.OptionMark.Color}"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="{StaticResource Mian.OptionMark.Color}"/>
        <Style x:Key="CheckBoxStyle_Main" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border CornerRadius="3" x:Name="checkBoxBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <!--<Path Visibility="Hidden" x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="1" Stretch="None"/>-->
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>-->
                            <Trigger Property="IsChecked" Value="true">
                                <!--<Setter Property="Visibility" TargetName="optionMark" Value="Visible"/>-->
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <!--<Setter Property="Visibility" TargetName="optionMark" Value="Collapsed"/>-->
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel>
            <CheckBox Style="{StaticResource CheckBoxStyle_Main}" Height="30" Width="30"/>
            <CheckBox Height="30" Width="30">
                <CheckBox.Template>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="border" Background="#FFFFFF" BorderThickness="2" BorderBrush="#FF8910">
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF8910"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
            <Border Height="30" Width="30" Background="#FFFFFF" BorderThickness="2" BorderBrush="#FF8910"/>
            <Border Height="300" Width="300" RenderOptions.EdgeMode="Aliased" Background="#FF8910" BorderThickness="20" BorderBrush="#FF8910"/>
        </StackPanel>
    </Grid>
</Window>
