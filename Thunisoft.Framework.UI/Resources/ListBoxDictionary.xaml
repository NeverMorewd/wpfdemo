<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:action="clr-namespace:Thunisoft.Framework.Commands;assembly=Thunisoft.Framework"
                    xmlns:local="clr-namespace:Thunisoft.Framework.UI.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
                    Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/CommonStyleDictionary.xaml" />
        <ResourceDictionary
                    Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/FontAndColorDictionary.xaml" />
        <ResourceDictionary
            Source="Pack://application:,,,/Thunisoft.Framework.UI;Component/Resources/CheckBoxDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <DataTemplate x:Key="CaseItemWithCheckBox" DataType="{x:Type ListBoxItem}">
        <Canvas x:Name="can" Height="65" Margin="0,0,0,0">
            <Border x:Name="selectBG" Background="Transparent" Height="65" CornerRadius="5" Width="595" />
            <TextBlock x:Name="PART_Main" FontSize="18" Text="{Binding  CaseName}" Foreground="White" Margin="50,5,0,0"/>
            <TextBlock x:Name="PART_Sub" FontSize="13" Text="{Binding  CaseNo}" Foreground="White" Margin="50,35,0,0"/>
            <CheckBox x:Name="PART_IsSelect" Cursor="Hand" 
                      Margin="20,20,0,0"
                      Width="20"
                      Height="20"
                      Background="#494b5d"
                      BorderThickness="0"
                      Style="{StaticResource CaseCheckBoxStyle}"
                      IsChecked="{Binding IsSelected, Mode=TwoWay,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <action:ExInvokeCommandAction Command="{Binding DataContext.CaseCheckedCommand,RelativeSource={RelativeSource AncestorType={x:Type Page},Mode=FindAncestor}}" CommandParameter="{Binding Id}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <action:ExInvokeCommandAction Command="{Binding DataContext.CaseUnCheckedCommand,RelativeSource={RelativeSource AncestorType={x:Type Page},Mode=FindAncestor}}" CommandParameter="{Binding Id}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
        </Canvas>
        <DataTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                <Setter TargetName="selectBG" Property="Background" Value="{StaticResource MyOrangeBackground}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="false">
                <Setter TargetName="selectBG" Property="Background" Value="Transparent"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="CaseWithCheckBoxListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="Foreground" Value="{StaticResource ListBox.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ScrollViewer
                            x:Name="ScrollViewer"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Style="{StaticResource ThunisoftScrollViewer}">
                            <ItemsPresenter Margin="0,0,5,0" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="bgItem" Background="{TemplateBinding Background}" Margin="0,10,0,0" CornerRadius="5">
                                    <ContentPresenter 
                                             TextBlock.Foreground="{TemplateBinding Foreground}" Margin="0,0,0,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="bgItem" Property="Background" Value="Gray"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>